# =============================================================================
# Microscope Shiro INI configuration
#
# =============================================================================
[main]
authc.loginUrl = /login.jsp
authc.successUrl = /PickGame
logout.redirectUrl = /PickGame

#Hash the passwords according to proper credential stuff
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

#jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm=db.MicroscopeJdbcRealm
jdbcRealm.credentialsMatcher = $passwordMatcher
#jdbcRealm.permissionsLookupEnabled=false
# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"
jdbcRealm.authenticationQuery = select password from users where user_name = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = select role from users_roles where user_name = ?

securityManager.realms = $jdbcRealm


[urls]
# make sure the end-user is authenticated.  If not, redirect to the 'authc.loginUrl' above,
# and after successful authentication, redirect them back to the original account page they
# were trying to view:
/login.jsp = authc
/logout.jsp = logout
/registration.jsp = anon
/registration_confirmation.jsp = anon
/registration_validation.jsp = anon
/images/* = anon
/favicon.ico = anon
/hangout.xml = anon
/skeleton.html = anon
/* = user
